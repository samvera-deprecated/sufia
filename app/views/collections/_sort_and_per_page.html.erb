<div class="batch-info">
  <div>
    <%= render partial: 'collections/form_for_select_collection', locals: { user_collections: @user_collections }  %>
  </div>

  <% if  params[:action] == "edit" %>
  <div class="batch-toggle">
     <% session[:batch_edit_state] = "on" %>
    <%= button_for_remove_selected_from_collection collection %>
   </div>
  <%end %>
   <div class="sort-toggle">
     <%# kind of hacky way to get this to work on catalog and folder controllers.  May be able to simple do {action: "index"} but I'm not sure -%>
     <% unless @response.response['numFound'] < 2 %>
        <%= form_tag collections.collection_path(collection), method: :get, class: 'per_page form-inline' do %>
             <fieldset class="col-xs-12 col-sm-9 col-md-8 col-lg-10">
               <legend class="sr-only"><%= t('sufia.sort_label') %></legend>
               <%= label_tag(:sort, "<span>Sort By:</span>".html_safe) %>
               <%= select_tag(:sort, options_for_select(sort_fields, h(params[:sort]))) %>
               <%= label_tag(:per_page) do %>
                   Show <%= select_tag(:per_page, options_for_select(['10', '20', '50', '100'], h(params[:per_page])), title: "Number of results to display per page") %>
                   per page
               <% end %>
               <%= render_hash_as_hidden_fields(search_state.params_for_search.except(:per_page, :sort)) %>
               &nbsp;&nbsp;&nbsp;
               <button class="btn btn-info"><span class="glyphicon glyphicon-refresh"></span> Refresh</button>
             </fieldset>
            <%= render 'view_type_group' %>
         <% end %>
      <% end unless sort_fields.empty? %>
   </div>
</div>
